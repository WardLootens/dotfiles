[include]
    path = .gitconfig.os
    path = .gitconfig.local
[user]
	name = Ward Lootens
	email = wardl@mips.be
[push]
	default = current
[mergetool]
	prompt = false
[difftool]
	prompt = false
[core]
#	autocrlf = input
	excludesfile = $HOME/.gitignore_global
	preloadindex = true	
[diff]
	tool = bc3
	guitool = bc3
	algorithm = histogram
	compactionHeuristic = true
	indentHeuristic = true
[diff "zip"]
    textconv = unzip -c -a -q
[gc]
	auto = 256
[alias]
    au = update-index --assume-unchanged 
    nau = update-index --no-assume-unchanged 
    naucl = update-index --no-assume-unchanged -- products/cyberlab/src/be/mips/cyberlab/web/context/ContextListener.java
    aucl = update-index --assume-unchanged -- products/cyberlab/src/be/mips/cyberlab/web/context/ContextListener.java
    cocl = checkout -- products/cyberlab/src/be/mips/cyberlab/web/context/ContextListener.java
    aux = update-index --assume-unchanged -- products/cyberlab/src/be/mips/cyberlab/web/context/ContextListener.java conf/webapp.properties conf/mailconfig.properties
    naux = update-index --no-assume-unchanged -- products/cyberlab/src/be/mips/cyberlab/web/context/ContextListener.java conf/webapp.properties conf/mailconfig.properties
    #backup = branch -f wardl/backup
    backup = "!f(){ git branch -f wardl/backup$1; }; f"
    branchname = "!f(){ git rev-parse --abbrev-ref HEAD | clip; }; f"
    check = diff wardl/backup
    cp = cherry-pick -x
    logb = !git log $(git merge-base $1 HEAD)..HEAD
    logg = log --graph --color --date=short --pretty=format:\"%x1b[31m%h%x09%x1b[33m%ad%x20%x1b[34m%<(12,trunc)%an%x1b[32m%d%x1b[0m%x20%s\"
	logm = log --graph --color --date=short --pretty=format:\"%x1b[31m%h%x09%x1b[33m%ad%x20%x1b[34m%<(12,trunc)%an%x1b[32m%d%x1b[0m%x20%s HEAD master\"
    logl = log --reverse --pretty=format:'(*) %s'
	log95 = log --graph --color --date=short --pretty=format:\"%x1b[31m%h%x09%x1b[33m%ad%x20%x1b[34m%<(12,trunc)%an%x1b[32m%d%x1b[0m%x20%s\" HEAD Glims_9_5
	last = log -1 HEAD
	pom = pull origin master
	cfg = config --global --edit
	co = checkout
	co95g = checkout Glims_9_5
	co96 = checkout CYBERLABV96
	co97 = checkout CYBERLABV97
	co98 = checkout CYBERLABV98
	co99 = checkout CYBERLABV99
	co910 = checkout CYBERLABV9_10
	co911 = checkout CYBERLABV9_11
	co912 = checkout CYBERLABV9_12
	co913 = checkout CYBERLABV9_13
	co100 = checkout CYBERLABV10_0
	cob = "!f(){ git branch | grep $1 | grep -v TEMP | xargs git checkout; }; f"
	cor = "!f(){ git branch -r | grep $1 | grep -v TEMP | xargs git checkout -t; }; f"
	com = checkout master
	col = checkout @{-1}
	db = "!f(){ git branch | grep $1 | grep -v TEMP | xargs git branch -D; }; f"
    ddl = "!f(){ git diff $1^ $1 --unified=0 -- db/windows/oracle/12c | grep '^+' | sed 's/+++.*//' | sed 's/^+\\(.*\\)/\\1/' | sed 's/\\(.*\\);/\"\\1\",/' | sed 's/^\\s*\\([^\"].*\\)/\"\\1\" +/' | clip; }; f"
    #ddl = "!f(){ git diff $1^ $1 --unified=0 -- db/windows/oracle/12c | grep '^+' | sed 's/+++.*//' | sed 's/\\(.*\\)/\\1/' ; }; f"
    dirdiff = difftool --dir-dif
	find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
    show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"
	rb98 = rebase CYBERLABV98
	rb99 = rebase CYBERLABV99
	rb910 = rebase CYBERLABV9_10
	rb911 = rebase CYBERLABV9_11
	rb912 = rebase CYBERLABV9_12
	rb913 = rebase CYBERLABV9_13
	rb100 = rebase CYBERLABV10_0
    rba = rebase --abort
    rbc = rebase --continue
    rbi = rebase -i
	rbi98 = !git rebase -i $(git merge-base CYBERLABV98 HEAD)
	rbi99 = !git rebase -i $(git merge-base CYBERLABV99 HEAD)
	rbi910 = !git rebase -i $(git merge-base CYBERLABV9_10 HEAD)
	rbi911 = !git rebase -i $(git merge-base CYBERLABV9_11 HEAD)
	rbi912 = !git rebase -i $(git merge-base CYBERLABV9_12 HEAD)
	rbi913 = !git rebase -i $(git merge-base CYBERLABV9_13 HEAD)
	rbi100 = !git rebase -i $(git merge-base CYBERLABV10_0 HEAD)
	rbic911 = !git rebase -i --no-autosquash $(git merge-base CYBERLABV9_11 HEAD)
    rbic912 = !git rebase -i --no-autosquash $(git merge-base CYBERLABV9_12 HEAD)
    rbic913 = !git rebase -i --no-autosquash $(git merge-base CYBERLABV9_13 HEAD)
    rbic100 = !git rebase -i --no-autosquash $(git merge-base CYBERLABV10_0 HEAD)
	rbir = !git rebase -i $(git tracked)
    reflogg = !git log --pretty=oneline --abbrev-commit --graph --decorate `git reflog | head -n 200 | grep wardl | cut -d ' ' -f 1`
	pfwl = push --force-with-lease
	mrg = merge --no-ff --no-edit @{-1}
    merge-no-ff = merge --no-ff
    push-upstream= push -u
    tracked = !git for-each-ref --format='%(upstream:short)' $(git symbolic-ref -q HEAD)
	undo = reset --hard HEAD^
	ignored = !echo "Ignored files:" && git ls-files -v | grep "^[[:lower:]]" | awk '{print $2}'
    restore-file = !git checkout $(git rev-list -n 1 HEAD -- "$1")^ -- "$1"
    most-changed = !git log --pretty=format: --name-only | sort | uniq -c | sort -rg | head -25
[mailmap]
     file = $HOME/.gitmailmap
[rebase]
	autostash = true
[rerere]
	enabled = true
